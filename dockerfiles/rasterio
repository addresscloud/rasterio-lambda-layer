# syntax=docker/dockerfile:experimental

# Adapted from https://github.com/mapbox/aws-lambda-python-packages

FROM lambda:python3.8 as intermediate

# Rasterio
RUN pip3 install rasterio[s3] --no-binary numpy --pre rasterio -t /tmp/vendored -U

# Copy Requirements
COPY requirements/common.txt /common.txt

# This is a secure key solution but does not work on OSX currently
# Install with docker ssh support and ignore cache.
RUN --mount=type=ssh pip3 --no-cache-dir install -r /common.txt -t /tmp/vendored -U

FROM lambda:python3.8

COPY --from=intermediate /tmp/vendored /tmp/vendored

# Remove misc files
RUN find /tmp/vendored -name "tests" -type d -exec rm -rdf {} +
RUN find /tmp/vendored -name "*-info" -type d -exec rm -rdf {} +
RUN rm -rdf /tmp/vendored/boto3/
RUN rm -rdf /tmp/vendored/botocore/
RUN rm -rdf /tmp/vendored/dateutil/
RUN rm -rdf /tmp/vendored/jmespath/
RUN rm -rdf /tmp/vendored/docutils/
RUN rm -rdf /tmp/vendored/numpy/doc/
RUN rm -rdf /tmp/vendored/s3transfer/
RUN du -sh /tmp/vendored

# Leave module precompiles for faster Lambda startup
RUN find /tmp/vendored -type f -name '*.pyc' | while read f; do n=$(echo $f | sed 's/__pycache__\///' | sed 's/.cpython-36//'); cp $f $n; done;
RUN find /tmp/vendored -type d -a -name '__pycache__' -print0 | xargs -0 rm -rf
RUN find /tmp/vendored -type f -a -name '*.py' -print0 | xargs -0 rm -f

# Create the zip file
RUN cd /tmp/vendored && zip -r9q /tmp/package.zip *
